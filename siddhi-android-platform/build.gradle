/*
 * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'me.champeau.gradle.antlr4'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        android.defaultConfig.javaCompileOptions.annotationProcessorOptions.includeCompileClasspath = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/DEPENDENCIES'
        merge 'META-INF/annotations/io.siddhi.annotation.Extension'
    }

    lintOptions {
        disable 'InvalidPackage'
    }
}

antlr4 {
    extraArgs = ['-package', 'io.siddhi.query.compiler']
    output = project.file("src/main/java/io.siddhi/query/compiler")
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation('io.siddhi:siddhi-core:5.0.0') {
        transitive = false
    }
    annotationProcessor('io.siddhi:siddhi-annotations:5.0.0') {
        transitive = false
    }
    implementation('io.siddhi:siddhi-annotations:5.0.0') {
        transitive = false
    }
    implementation('io.siddhi:siddhi-query-api:5.0.0') {
        transitive = false
    }
    implementation('io.siddhi:siddhi-query-compiler:5.0.0') {
        transitive = false
    }
    implementation('org.wso2.extension.siddhi.map.text:siddhi-map-text:2.0.0') {
        transitive = false
    }
    implementation('org.wso2.extension.siddhi.map.keyvalue:siddhi-map-keyvalue:2.0.0') {
        transitive = false
    }
    implementation "com.google.guava:guava:19.0"
    implementation("org.apache.log4j.wso2:log4j:1.2.17.wso2v1") {
        transitive = false
    }
    implementation "org.osgi:org.osgi.core:6.0.0"
    implementation "org.wso2.orbit.com.lmax:disruptor:3.3.2.wso2v2"
    implementation "org.antlr:antlr4-runtime:4.5.1"
}

apply plugin: 'maven'

uploadArchives {
    repositories.mavenDeployer {
        repository(url: System.getenv("DEPLOY_URL")) {
            authentication(userName: System.getenv("USER_NAME"), password: System.getenv("PASSWORD"))
            pom.groupId = "io.siddhi.android.platform"
            pom.artifactId = "siddhi-android-platform"
            pom.version = '1.0.0'
        }
    }
}
